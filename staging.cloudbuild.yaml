steps:
  - name: blastshielddown/wavlake-catalog:latest
    id: install
    entrypoint: npm
    args: ["install"]
  - name: blastshielddown/wavlake-catalog:latest
    id: build
    entrypoint: npm
    args: ["run", "build"]
  - name: blastshielddown/wavlake-catalog:latest
    id: create env
    entrypoint: npm
    args: ["run", "create-env"]
    env:
      - "LOGLEVEL=${_LOGLEVEL}"
      - "PG_HOST=${_PG_HOST}"
      - "PG_PORT=${_PG_PORT}"
      - "PG_DATABASE=${_PG_DATABASE}"
      - "PG_USER=${_PG_USER}"
      - "CORS_HOST=${_CORS_HOST}"
      - "LOCAL_UPLOAD_PATH=${_LOCAL_UPLOAD_PATH}"
      - "LOCAL_CONVERT_PATH=${_LOCAL_CONVERT_PATH}"
      - "AWS_ACCESS_KEY_ID=${_AWS_ACCESS_KEY_ID}"
      - "AWS_S3_BUCKET_NAME=${_AWS_S3_BUCKET_NAME}"
      - "AWS_CDN_DOMAIN=${_AWS_CDN_DOMAIN}"
      - "AWS_CDN_ID=${_AWS_CDN_ID}"
      - "AWS_S3_TRACK_PREFIX=${_AWS_S3_TRACK_PREFIX}"
      - "AWS_S3_IMAGE_PREFIX=${_AWS_S3_IMAGE_PREFIX}"
      - "AWS_S3_RAW_PREFIX=${_AWS_S3_RAW_PREFIX}"
      - "RANDOM_SAMPLE_SIZE=${_RANDOM_SAMPLE_SIZE}"
      - "SENTRY_DSN=${_SENTRY_DSN}"
      - "SENTRY_TRACES_SAMPLE_RATE=${_SENTRY_TRACES_SAMPLE_RATE}"
      - "PODCAST_INDEX_KEY=${_PODCAST_INDEX_KEY}"
      - "PODCAST_INDEX_SECRET=${_PODCAST_INDEX_SECRET}"
      - "ZBD_CALLBACK_URL=${_ZBD_CALLBACK_URL}"
      - "NPUB_UPDATE_SERVICE_URL=${_NPUB_UPDATE_SERVICE_URL}"
    secretEnv: ["PG_PASSWORD", "AWS_SECRET_ACCESS_KEY", "ZBD_API_KEY"]
  - name: blastshielddown/wavlake-catalog:latest
    id: migrate db
    entrypoint: npm
    args: ["run", "migrate"]
    env:
      - "NODE_ENV=staging"
      - "PG_HOST=${_PG_HOST}"
      - "PG_PORT=${_PG_PORT}"
      - "PG_DATABASE=${_PG_DATABASE}"
      - "PG_USER=${_PG_USER}"
    secretEnv: ["PG_PASSWORD"]
  - name: blastshielddown/wavlake-catalog:latest
    id: generate prisma
    entrypoint: npm
    args: ["run", "generate"]
  - name: "gcr.io/cloud-builders/gcloud"
    args: ["app", "deploy", "./staging.yaml"]
availableSecrets:
  secretManager:
    - versionName: projects/$PROJECT_ID/secrets/WAVLAKE_SERVER_STAGING_ADMIN_PASSWORD/versions/latest
      env: "PG_PASSWORD"
    - versionName: projects/$PROJECT_ID/secrets/AWS_S3_MEDIA_SECRET_STAGING/versions/latest
      env: "AWS_SECRET_ACCESS_KEY"
    - versionName: projects/$PROJECT_ID/secrets/ZBD_API_KEY/versions/latest
      env: "ZBD_API_KEY"
timeout: "900s"
options:
  logging: CLOUD_LOGGING_ONLY
  pool:
    name: projects/$PROJECT_ID/locations/us-central1/workerPools/build-pool
  dynamic_substitutions: true
