steps:
  - name: node:16.20.0
    id: install
    entrypoint: npm
    args: ["install"]
  - name: node:16.20.0
    id: build
    entrypoint: npm
    args: ["run", "build"]
  - name: node:16.20.0
    id: create env
    entrypoint: npm
    args: ["run", "create-env"]
    env:
      - "LOGLEVEL=${_LOGLEVEL}"
      - "PG_HOST=${_PG_HOST}"
      - "PG_PORT=${_PG_PORT}"
      - "PG_DATABASE=${_PG_DATABASE}"
      - "PG_USER=${_PG_USER}"
      - "CORS_HOST=${_CORS_HOST}"
      - "LOCAL_UPLOAD_PATH=${_LOCAL_UPLOAD_PATH}"
      - "LOCAL_CONVERT_PATH=${_LOCAL_CONVERT_PATH}"
      - "AWS_ACCESS_KEY_ID=${_AWS_ACCESS_KEY_ID}"
      - "AWS_S3_BUCKET_NAME=${_AWS_S3_BUCKET_NAME}"
      - "AWS_CDN_DOMAIN=${_AWS_CDN_DOMAIN}"
      - "AWS_CDN_ID=${_AWS_CDN_ID}"
      - "AWS_S3_TRACK_PREFIX=${_AWS_S3_TRACK_PREFIX}"
      - "AWS_S3_IMAGE_PREFIX=${_AWS_S3_IMAGE_PREFIX}"
      - "AWS_S3_RAW_PREFIX=${_AWS_S3_RAW_PREFIX}"
    secretEnv: ["PG_PASSWORD", "AWS_SECRET_ACCESS_KEY"]
  - name: node:16.20.0
    id: migrate db
    entrypoint: npm
    args: ["run", "migrate"]
    env:
      - "NODE_ENV=production"
      - "PG_HOST=${_PG_HOST}"
      - "PG_PORT=${_PG_PORT}"
      - "PG_DATABASE=${_PG_DATABASE}"
      - "PG_USER=${_PG_USER}"
    secretEnv: ["PG_PASSWORD"]
  - name: node:16.20.0
    id: generate prisma
    entrypoint: npm
    args: ["run", "generate"]
  - name: "gcr.io/cloud-builders/gcloud"
    args: ["app", "deploy", "./prod.yaml"]
availableSecrets:
  secretManager:
    - versionName: projects/$PROJECT_ID/secrets/WAVLAKE_SERVER_PROD_ADMIN_PASSWORD/versions/latest
      env: "PG_PASSWORD"
    - versionName: projects/$PROJECT_ID/secrets/AWS_S3_MEDIA_SECRET_PROD/versions/latest
      env: "AWS_SECRET_ACCESS_KEY"
timeout: "900s"
options:
  logging: CLOUD_LOGGING_ONLY
  pool:
    name: projects/$PROJECT_ID/locations/us-central1/workerPools/build-pool
  dynamic_substitutions: true
